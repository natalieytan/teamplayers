<div class="rounded">
 <%= image_tag team.image_url(:square) %>
</div>

<%= form_with(model: team, local: true, class: "fancyform") do |form| %>
  <% if team.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(team.errors.count, "error") %> prohibited this team from being saved:</h2>

      <ul>
      <% team.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

    <div class="l-6 m-12 filebox">
    <div class="uploader">
      <%= form.hidden_field :image, value: team.cached_image_data %>
      <%= form.file_field :image, accept: 'image/jpeg,image/jpg,image/gif,image/png', id: :team_image, class: "inputfile" %>
      <label for="team_image"><%= fa_icon "upload" %> Upload Team Picture</label>
      </div>
      
      <div class="file-info"></div>
    </div>


  <div class="field row">
    <div class="l-3 m-12  formlabel">
    <%= form.label :name, "Team Name", class: "required" %>
    </div>
    <div class="l-9 m-12 inputbox">
    <%= form.text_field :name, required: true %>
    </div>

  </div>

  <div class="field row">
  <div class="l-3 m-12  formlabel">
    <%= form.label :sport_id, class: "required" %>
  </div>
  <div class="l-9 m-12 inputbox">
    <%= form.collection_select :sport_id, Sport.order('name ASC'), :id, :title_name, :include_blank => true,  required: true %>
  </div>
  </div>

  <div class="field row">
  <div class="l-3 m-12  formlabel">
    <%= form.label :skill_id, "Skill Level", class: "required" %>
  </div>
  <div class="l-9 m-12 inputbox">
    <%= form.collection_select :skill_id, Skill.all, :id, :name, :include_blank => true,  required: true %>
  </div>
  </div>

  <div class="field row">
  <div class="l-3 m-12  formlabel">
    <%= form.label :gender_id, class: "required" %>
  </div>
  <div class="l-9 m-12 inputbox">
    <%= form.collection_select :gender_id, Gender.all, :id, :name, :include_blank => true,  required: true %>
  </div>
  </div>

  <div class="field row">
  <div class="l-3 m-12  formlabel">
    <%= form.label :day_id, "Day", class: "required" %>
    </div>
    <div class="l-9 m-12 inputbox">
    <%= form.collection_select :day_id, Day.all, :id, :name, :include_blank => true,  required: true %>  
      <p class="subtle-text">Day of the week does your team usually plays on.</p>
    </div>
  
  </div>

  <div class="field row">
  <div class="l-3 m-12  formlabel">
    <%= form.label :description %>
    </div>
    <div class="l-9 m-12 inputbox">
    <%= form.text_area :description, id: :team_description %>
  </div>
  </div>

  <div class="field row">
  <div class="l-3 m-12  formlabel">
    <label class="required" >Location</label>
  </div>
  <div class="l-9 m-12 inputbox" id="locationField">
    <input id="autocomplete"  onFocus="geolocate()" type="text"></input>
      <p class="subtle-text"> Where your team usually plays.
      </br> Entering a location above autocompletes the details below.
      </br> Alternatively, you may choose to edit the details below manually.</p>
  <div class="address">
    <div class="row">

       <div class="field l-3 m-3">
        <%= form.label :street_number, "Street no." %>
        <%= form.text_field :street_number, id: "street_number" %>
        </div>

        <div class="field l-9 m-9">
         <%= form.label :route, "Street name" %>
       <%= form.text_field :route, id: "route" %>
         </div>
  </div>

  <div class="row">
    <div class="field l-6 m-6">
    <%= form.label :locality, "State" %>
    <%= form.text_field :locality, id: "locality" %>
  </div>

    <div class="field l-6 m-6">
    <%= form.label :postal_code, "Post code"  %>
    <%= form.text_field :postal_code, id: "postal_code" %>
  </div>

    <div class="field l-6 m-6">
    <%= form.label :administrative_area , "State" %>
    <%= form.text_field :administrative_area,  id: "administrative_area_level_1" %>
    </div>

    <div class="field l-6 m-6">
      <%= form.label :country %>
      <%= form.text_field :country, id: "country" %>
    </div>
  </div>

  </div>
  </div>
  </div>  


  </article>

  <script src="https://checkout.stripe.com/checkout.js" class="stripe-button"
          data-key="<%= Rails.configuration.stripe[:publishable_key] %>"
          data-description="A month's subscription"
          data-amount="200"
          data-locale="auto"></script>
          
  <div class="actions">
    <%= form.submit "Create Team ($1.00)"%>
  </div>
<% end %>


    <script>
        document.getElementsByClassName("stripe-button-el")[0].style.display = 'none';
    </script>

<script type="text/javascript">
  $('#team_image').bind('change', function() {
    var size_in_megabytes = this.files[0].size/1024/1024;
    var input = document.querySelector( '.inputfile' );
    var fileinfo = document.querySelector( '.file-info' );
    var label	 = input.nextElementSibling;
    var labelVal = label.innerHTML;
    var fileName = '';
    if (size_in_megabytes > 1) {
      alert('Maximum file size is 1MB. Please choose a smaller file.');
      fileinfo.innerHTML = fileName;
    }
    else {
    fileName = this.value.split( '\\' ).pop();
    if( fileName )
      fileinfo.innerHTML = fileName;
    }
  });

</script>
    <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB4JYfecnp9SrqFt5SU5z6g4TBJ5X3MUvs&libraries=places&callback=initAutocomplete"
        async defer></script>
  